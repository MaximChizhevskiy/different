export const fetchTasksTC = createAsyncThunk(`${tasksSlice.name}/fetchTasks`, (todolistId: string, thunkAPI) => {
  const { dispatch } = thunkAPI
  dispatch(setAppStatus({ status: 'loading' }))
  tasksApi
    .getTasks(todolistId)
    .then((res) => {
      dispatch(setAppStatus({ status: 'succeeded' }))
      dispatch(setTasks({ todolistId, tasks: res.data.items }))
    })
    .catch((error) => {
      handleServerNetworkError(error, dispatch)
    })
})

//=========================================================================


export const fetchTasksTC = createAsyncThunk(`${tasksSlice.name}/fetchTasks`, async (todolistId: string, thunkAPI) => {
  const { dispatch } = thunkAPI
  dispatch(setAppStatus({ status: 'loading' }))
  try {
    const res = await tasksApi.getTasks(todolistId)
    dispatch(setAppStatus({ status: 'succeeded' }))
    dispatch(setTasks({ todolistId, tasks: res.data.items }))
  } catch (error) {
    handleServerNetworkError(error, dispatch)
  }
})